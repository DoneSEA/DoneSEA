

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 21 12:31:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16C56
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	jmp_tab,global,class=ENTRY,delta=2
    10                           	dabs	1,0x1C,4
    11  0000                     
    12                           ; Version 2.10
    13                           ; Generated 31/07/2019 GMT
    14                           ; 
    15                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16C56 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0005                     _PORTA	set	5
    54  0005                     _TRISA	set	5
    55  0000                     _OPTION	set	0
    56                           
    57                           	psect	cinit
    58  004                     start_initialization:	
    59                           ; #config settings
    60                           
    61  004                     __initialization:	
    62  004                     end_of_initialization:	
    63                           ;End of C runtime variable initialization code
    64                           
    65  004                     __end_of__initialization:	
    66  004  0064               	clrf	4
    67  005  04A3  0BAF         	ljmp	_main	;jump to C main() function
    68                           
    69                           	psect	cstackCOMMON
    70  000                     __pcstackCOMMON:	
    71  000                     ??_delay:	
    72  000                     ??_main:	
    73                           ; 1 bytes @ 0x0
    74                           
    75                           
    76                           	psect	cstackBANK0
    77  007                     __pcstackBANK0:	
    78                           ; 1 bytes @ 0x0
    79                           
    80  007                     ?_delay:	
    81  007                     ?_main:	
    82                           ; 1 bytes @ 0x0
    83                           
    84  007                     delay@a:	
    85                           ; 1 bytes @ 0x0
    86                           
    87                           
    88                           ; 2 bytes @ 0x0
    89  007                     	ds	2
    90  009                     delay@b:	
    91                           
    92                           ; 2 bytes @ 0x2
    93  009                     	ds	2
    94  00B                     delay@c:	
    95                           
    96                           ; 2 bytes @ 0x4
    97  00B                     	ds	2
    98                           
    99                           	psect	maintext
   100  1AF                     __pmaintext:	
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 13 in file "main.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;		None
   111 ;; Return value:  Size  Location     Type
   112 ;;                  1   19[None  ] void 
   113 ;; Registers used:
   114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, pclath, cstack
   115 ;; Tracked objects:
   116 ;;		On entry : B00/0
   117 ;;		On exit  : 0/0
   118 ;;		Unchanged: 0/0
   119 ;; Data sizes:     COMMON   BANK0
   120 ;;      Params:         0       0
   121 ;;      Locals:         0       0
   122 ;;      Temps:          0       0
   123 ;;      Totals:         0       0
   124 ;;Total ram usage:        0 bytes
   125 ;; Hardware stack levels required when called:    1
   126 ;; This function calls:
   127 ;;		_delay
   128 ;; This function is called by:
   129 ;;		Startup code after reset
   130 ;; This function uses a non-reentrant model
   131 ;;
   132                           
   133                           
   134                           ;psect for function _main
   135  1AF                     _main:	
   136                           
   137                           ;main.c: 16: OPTION=8;
   138                           
   139                           ;incstack = 0
   140                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+1+pclath+cstack]
   141  1AF  0C08               	movlw	8
   142  1B0  0002               	option
   143                           
   144                           ;main.c: 17: TRISA=0;
   145  1B1  0C00               	movlw	0
   146  1B2  0005               	tris	5
   147  1B3                     l552:	
   148                           
   149                           ;main.c: 20: {;main.c: 21: PORTA = 1;
   150  1B3  0C01               	movlw	1
   151  1B4  0025               	movwf	5	;volatile
   152                           
   153                           ;main.c: 22: delay();
   154  1B5  04A3  0907  04A3   	fcall	entry__delay
   155                           
   156                           ;main.c: 23: PORTA = 2;
   157  1B8  0C02               	movlw	2
   158  1B9  0025               	movwf	5	;volatile
   159                           
   160                           ;main.c: 24: delay();
   161  1BA  04A3  0907  04A3   	fcall	entry__delay
   162                           
   163                           ;main.c: 25: PORTA = 4;
   164  1BD  0C04               	movlw	4
   165  1BE  0025               	movwf	5	;volatile
   166                           
   167                           ;main.c: 26: delay();
   168  1BF  04A3  0907  04A3   	fcall	entry__delay
   169                           
   170                           ;main.c: 27: PORTA = 8;
   171  1C2  0C08               	movlw	8
   172  1C3  0025               	movwf	5	;volatile
   173                           
   174                           ;main.c: 28: delay();
   175  1C4  04A3  0907  04A3   	fcall	entry__delay
   176                           
   177                           ;main.c: 29: PORTA = 0;
   178  1C7  0065               	clrf	5	;volatile
   179                           
   180                           ;main.c: 30: delay();
   181  1C8  04A3  0907  04A3   	fcall	entry__delay
   182  1CB  0BB3               	goto	l552
   183  1CC                     __end_of_main:	
   184                           
   185                           	psect	text1
   186  1CC                     __ptext1:	
   187 ;; *************** function _delay *****************
   188 ;; Defined at:
   189 ;;		line 5 in file "main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;  c               2    4[BANK0 ] unsigned int 
   194 ;;  b               2    2[BANK0 ] unsigned int 
   195 ;;  a               2    0[BANK0 ] unsigned int 
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    8[None  ] void 
   198 ;; Registers used:
   199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMMON   BANK0
   205 ;;      Params:         0       0
   206 ;;      Locals:         0       6
   207 ;;      Temps:          0       0
   208 ;;      Totals:         0       6
   209 ;;Total ram usage:        6 bytes
   210 ;; Hardware stack levels used:    1
   211 ;; This function calls:
   212 ;;		Nothing
   213 ;; This function is called by:
   214 ;;		_main
   215 ;; This function uses a non-reentrant model
   216 ;;
   217                           
   218                           
   219                           ;psect for function _delay
   220  1CC                     _delay:	
   221                           
   222                           ;main.c: 7: unsigned int a,b,c;;main.c: 8: for(a=200;a>0;a--)
   223  1CC  0CC8               	movlw	200
   224  1CD  0027               	movwf	delay@a
   225  1CE  0C00               	movlw	0
   226  1CF  0028               	movwf	delay@a+1
   227  1D0                     l526:	
   228                           
   229                           ;main.c: 9: for(b=110;b>0;b--)
   230  1D0  0C6E               	movlw	110
   231  1D1  0029               	movwf	delay@b
   232  1D2  0C00               	movlw	0
   233  1D3  002A               	movwf	delay@b+1
   234  1D4                     l532:	
   235                           
   236                           ;main.c: 10: for(c=100;c>0;c--);
   237  1D4  0C64               	movlw	100
   238  1D5  002B               	movwf	delay@c
   239  1D6  0C00               	movlw	0
   240  1D7  002C               	movwf	delay@c+1
   241  1D8                     l538:	
   242  1D8  0C01               	movlw	1
   243  1D9  003C               	movwf	28
   244  1DA  007D               	clrf	29
   245  1DB  021C               	movf	28,w
   246  1DC  00AB               	subwf	delay@c,f
   247  1DD  021D               	movf	29,w
   248  1DE  0703               	skipc
   249  1DF  00EC               	decf	delay@c+1,f
   250  1E0  00AC               	subwf	delay@c+1,f
   251  1E1  020B               	movf	delay@c,w
   252  1E2  010C               	iorwf	delay@c+1,w
   253  1E3  0743               	btfss	3,2
   254  1E4  0BD8               	goto	l538
   255  1E5  0C01               	movlw	1
   256  1E6  003C               	movwf	28
   257  1E7  007D               	clrf	29
   258  1E8  021C               	movf	28,w
   259  1E9  00A9               	subwf	delay@b,f
   260  1EA  021D               	movf	29,w
   261  1EB  0703               	skipc
   262  1EC  00EA               	decf	delay@b+1,f
   263  1ED  00AA               	subwf	delay@b+1,f
   264  1EE  0209               	movf	delay@b,w
   265  1EF  010A               	iorwf	delay@b+1,w
   266  1F0  0743               	btfss	3,2
   267  1F1  0BD4               	goto	l532
   268  1F2  0C01               	movlw	1
   269  1F3  003C               	movwf	28
   270  1F4  007D               	clrf	29
   271  1F5  021C               	movf	28,w
   272  1F6  00A7               	subwf	delay@a,f
   273  1F7  021D               	movf	29,w
   274  1F8  0703               	skipc
   275  1F9  00E8               	decf	delay@a+1,f
   276  1FA  00A8               	subwf	delay@a+1,f
   277  1FB  0207               	movf	delay@a,w
   278  1FC  0108               	iorwf	delay@a+1,w
   279  1FD  0643               	btfsc	3,2
   280  1FE  0800               	retlw	0
   281  1FF  0BD0               	goto	l526
   282  200                     __end_of_delay:	
   283  001C                     btemp	set	28	;btemp
   284  001C                     wtemp0	set	28
   285  001E                     wtemp1	set	30
   286  001C                     ttemp0	set	28
   287  001C                     ltemp0	set	28
   288                           
   289                           	psect	jmp_tab
   290  007                     __pjmp_tab:	
   291                           ;incstack = 0
   292                           ; Regs used in _delay: [wreg-fsr0h+status,2-btemp+1]
   293                           
   294  007                     entry__delay:	
   295  007  04A3  0BCC         	ljmp	_delay


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            23      6       6

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_delay

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     138
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                6     6      0     138
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               17      6       6       3       26.1%
ABS                  0      0       0       4        0.0%
BITBANK0            17      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 21 12:31:06 2020

                     fsr 0004                      l532 01D4                      l526 01D0  
                    l552 01B3                      l538 01D8                     _main 01AF  
                   btemp 001C                     start 0002                    ?_main 0007  
                  _PORTA 0005                    _TRISA 0005                    _delay 01CC  
                  ltemp0 001C                    ttemp0 001C                    status 0003  
                  wtemp0 001C                    wtemp1 001E          __initialization 0004  
           __end_of_main 01CC                   ??_main 0000                   ?_delay 0007  
                 _OPTION 0000              entry__delay 0007                   delay@a 0007  
                 delay@b 0009                   delay@c 000B  __end_of__initialization 0004  
         __pcstackCOMMON 0000            __end_of_delay 0200                  ??_delay 0000  
             __pmaintext 01AF                  __ptext1 01CC     end_of_initialization 0004  
    start_initialization 0004                ___latbits 0001            __pcstackBANK0 0007  
              __pjmp_tab 0007           __size_of_delay 0034            __size_of_main 001D  
